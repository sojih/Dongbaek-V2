<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itwillbs.DongZero.mapper.AdminMapper">

	<!-- 영화관 목록 조회 -->
	<select id="getTeater" resultType="hashmap">
		SELECT 
			theater_num
			, theater_name
			FROM 
				THEATERS
	</select>
	
    
    	<!-- 영화관 별 스케줄 목록 조회 -->
    <select id="selectScheduleList" resultType="com.itwillbs.DongZero.voNew.PlayScheduleVO">
        SELECT
				*
          FROM PLAYS p
	          JOIN THEATERS t
	         	 ON p.theater_num = t.theater_num
	          JOIN MOVIES m
	       	   	ON p.movie_num = m.movie_num
	          JOIN ROOMS r
	        	ON p.room_num = r.room_num
				WHERE play_date = #{play_date}
				AND p.theater_num = #{theater_num}
					ORDER BY play_num
    </select>
    


	<!-- 상영날짜 별 선택가능한 영화 목록 조회 -->
	<select id="findMovieList" resultType="com.itwillbs.DongZero.vo.MovieVO">
		SELECT
			movie_num, movie_name_kr
			FROM 
				MOVIES
			WHERE
				#{play_date} 
			BETWEEN movie_release_date 
			AND movie_close_date
	</select>
	
	<!-- 영화 번호로 러닝타임(상영시간) 조회 -->
	<select id="findMovieRunningTime" resultType="int">
		SELECT 
			movie_running_time
			FROM 
				MOVIES
			WHERE
				movie_num = ${movie_num}
	</select>
	
	
	<!-- 영화 번호로 영화명 조회 -->
	<select id="findMovieName" resultType="String">
		SELECT 
			movie_name_kr
			FROM 
				MOVIES
			WHERE
				movie_num = ${movie_num}
	</select>

   
    <!-- 영화목록 셀렉트 박스 클릭 시 DB에서 회차 생성 관련 정보 가져오기 -->
	<select id="getTurnInfo" resultType="com.itwillbs.DongZero.voNew.PlayScheduleVO">
		SELECT 
			p.movie_num
			, movie_name_kr
			, movie_release_date
			, movie_close_date
			, movie_running_time
			, room_start_time
			, room_end_time
			, play_turn
			, play_start_time
			, play_end_time
			, play_time_type
			FROM 
				MOVIES m
			JOIN  
				PLAYS p
			ON	
				p.movie_num = m.movie_num 
			JOIN 
				THEATERS t
			ON 
				p.theater_num = t.theater_num
			JOIN 
				ROOMS r
			ON 
				p.room_num = r.room_num
			WHERE 
				p.theater_num = #{theater_num}
<!-- 			AND  -->
<!-- 				p.room_num = #{pageNo} -->
			AND 
				p.movie_num = #{movie_num}
	</select>
	
	<!-- 영화관 번호로 상영관 정보 가져오기 -->
	<select id="getRoom" resultType="com.itwillbs.DongZero.voNew.PlayScheduleVO">
		SELECT
			r.room_num , room_name
			FROM
				ROOMS r
				JOIN THEATERS t
					ON r.theater_num = t.theater_num
					WHERE r.theater_num = #{theater_num}
	</select>
	
	<!-- 특정 날짜 상영스케줄 정보 가져오기 -->
	<select id="checkSchedule" resultType="int">	
		SELECT count(*)
			FROM PLAYS
				WHERE play_date = #{play_date}
					AND theater_num = #{theater_num}
					AND room_num = #{room_num}
	</select>
	
	<!-- 특정 날짜, 영화관, 상영관 상영스케줄 등록 -->
	<insert id="insertSchedule">
    INSERT 
    	INTO PLAYS (
	        play_date,
	        play_turn,
	        play_start_time,
	        play_end_time,
	        play_time_type,
	        movie_num,
	        theater_num,
	        room_num
		    ) VALUES (
		        #{play_date},
		        #{play_turn},
		        #{new_start_turn},
		        #{new_end_turn},
		        #{play_time_type},
		        #{movie_num},
		        #{theater_num},
		        #{room_num}
		    )
	</insert>
	
	<!-- 특정 날짜, 영화관, 상영관 상영스케줄 회차별로 변경 -->
	<update id="updateSchedule">
    UPDATE PLAYS
    	SET 
    		play_turn = #{play_turn}
    		, play_start_time =  #{new_start_turn}
    		, play_end_time = #{new_end_turn}
    		, play_time_type = #{play_time_type}
	        , movie_num = #{movie_num}
		    WHERE 
		    	play_date = #{play_date}
		    	AND theater_num =  #{theater_num}
		    	AND room_num = #{room_num}
		    	AND play_turn = #{play_turn}
	</update>
	
	<!-- 특정 날짜, 영화관, 상영관 상영스케줄 삭제 수행하기 -->
	<delete id="deleteSchedule">
		DELETE 
			FROM PLAYS
				WHERE play_date = #{play_date}
					AND theater_num = #{theater_num}
					AND room_num = #{room_num}
	</delete>
	
	<!-- 상영스케줄 변경 시 상영관 종료일보다 늦는 회차 정보 삭제 수행하기 -->
	<delete id="deleteLateSchedule" >
		DELETE 
			FROM PLAYS
				WHERE play_date = #{play_date}
					AND theater_num = #{theater_num}
					AND room_num = #{room_num}
					AND play_turn = #{play_turn}
	</delete>
	
	
	<!-- 상영관별 시작시간 가져오기 -->
	<select id="getRoomStartTime" resultType="com.itwillbs.DongZero.voNew.PlayScheduleVO">
		SELECT
			r.room_num , room_name, room_start_time, room_end_time, t.theater_num 
			FROM
				ROOMS r
				JOIN THEATERS t
					ON r.theater_num = t.theater_num
					WHERE r.theater_num = #{theater_num}
					AND r.room_num = #{room_num}
	</select>
	
	
	
	
	
	<!-- CS 게시판 condition 변수에 따라 목록List<CsVO> 출력 -->
    <select id="getCsWithPaging" resultType="com.itwillbs.DongZero.voNew.CsInfoVO">
    	SELECT
    		 * 
    		 FROM 
    		 	CS c
    		 	JOIN
    		 		MEMBERS m
    		 		ON c.member_id = m.member_id
    		 WHERE 
    		 	cs_type IN(${condition}) 
    		 	ORDER BY cs_type_list_num  DESC 
    		 	LIMIT #{start}, #{pageListLimit}
    </select>
    
    <!-- 자주묻는 질문 게시판 변수에 따라서 목록 출력하기 -->
    <select id="getCsWithKeywordPaging" resultType="com.itwillbs.DongZero.voNew.CsInfoVO">
    	SELECT
    		 * 
    		 FROM 
    		 	CS c
    		 	JOIN
    		 		MEMBERS m
    		 		ON c.member_id = m.member_id
				WHERE
				<!-- 2. 검색타입(cs_type_keyword)에 따른 WHERE 절 조건 대상 변경 -->
				<choose>
					<when test="cs_type_keyword.equals('전체')">
						cs_type IN(${condition})
					</when>
					<when test="cs_type_keyword.equals('예매')">
						cs_type LIKE '${cs_type_keyword}'
					</when>
					<when test="cs_type_keyword.equals('멤버십')">
						cs_type LIKE '${cs_type_keyword}'
					</when>
					<when test="cs_type_keyword.equals('결제수단')">
						cs_type LIKE '${cs_type_keyword}'
					</when>
					<when test="cs_type_keyword.equals('극장')">
						cs_type LIKE '${cs_type_keyword}'
					</when>
					<when test="cs_type_keyword.equals('스토어')">
						cs_type LIKE '${cs_type_keyword}'
					</when>
					<when test="cs_type_keyword.equals('할인혜택')">
						cs_type LIKE '${cs_type_keyword}'
					</when>
				</choose>
    		 	ORDER BY cs_type_list_num  DESC 
    		 	LIMIT #{start}, #{pageListLimit}
    </select>
    
    <!-- CS 게시판 condition 변수에 따라 총 게시물 수 출력 -->
    <select id="getCsCount" resultType="int">
    	SELECT 
    		COUNT(*)
    		FROM
   				CS
   			WHERE
   				cs_type IN(${condition})
    </select>
    
    
        <!-- CS 게시판 키워드 변수에 따라 총 게시물 수 출력 -->
    <select id="getCsCountKeyword" resultType="int">
    	SELECT 
    		COUNT(*)
    		FROM
   				CS
				WHERE
				<!-- 2. 검색타입(cs_type_keyword)에 따른 WHERE 절 조건 대상 변경 -->
				<choose>
					<when test="cs_type_keyword.equals('전체')">
						cs_type IN(${condition})
					</when>
					<when test="cs_type_keyword.equals('예매')">
						cs_type LIKE '${cs_type_keyword}'
					</when>
					<when test="cs_type_keyword.equals('멤버십')">
						cs_type LIKE '${cs_type_keyword}'
					</when>
					<when test="cs_type_keyword.equals('결제수단')">
						cs_type LIKE '${cs_type_keyword}'
					</when>
					<when test="cs_type_keyword.equals('극장')">
						cs_type LIKE '${cs_type_keyword}'
					</when>
					<when test="cs_type_keyword.equals('스토어')">
						cs_type LIKE '${cs_type_keyword}'
					</when>
					<when test="cs_type_keyword.equals('할인혜택')">
						cs_type LIKE '${cs_type_keyword}'
					</when>
				</choose>
    </select>

	<!-- CS 게시판 condition 변수에 따라 글수정, 답글 달기 시 해당 타입글번호 CsVO 출력 -->
    <select id="getCsInfo" resultType="com.itwillbs.DongZero.voNew.CsInfoVO">
    	SELECT
    		 * 
    		 FROM 
    		 	CS c
    		 	JOIN
    		 		MEMBERS m
    		 		ON c.member_id = m.member_id
    		 WHERE 
    		 	cs_type IN(${condition})
    		 	AND cs_type_list_num = ${cs_type_list_num}
    </select>
    
	<!--  CS게시판 cs_type_list_num 번호 구하기 -->
	<select id="countCsTypeListNum" resultType="int">
		SELECT
			MAX(cs_type_list_num)
				FROM
	   				CS
	   			WHERE
	   				cs_type IN(${condition})
	</select>
    
	<!-- CS-공지사항, 자주묻는 질문 관리자 글쓰기 -->
	<insert id="registCs">
		<selectKey keyProperty="csInfo.cs_type_list_num" resultType="int" order="BEFORE">			
			SELECT
				IFNULL(MAX(cs_type_list_num), 0)
					FROM
		   				CS
		   			WHERE
		   				cs_type IN(${condition})
		</selectKey>
		INSERT
			INTO
				CS (
					cs_subject
					, cs_content
					, cs_type
					, cs_date
					, member_id
					, cs_type_list_num
					, cs_file)
				VALUES (
					#{csInfo.cs_subject}
					, #{csInfo.cs_content}
					, #{csInfo.cs_type}
					, SYSDATE()
					, #{csInfo.member_id}
					, #{csInfo.cs_type_list_num} + 1
					, #{csInfo.cs_file})
	</insert>
	
	<!-- CS-공지사항, 자주묻는 질문 글수정 -->
	<update id="updateCs">
		UPDATE 
			CS
			SET 
				cs_type = #{csInfo.cs_type}
				, cs_subject = #{csInfo.cs_subject}
				, member_id = #{csInfo.member_id}
				, cs_content = #{csInfo.cs_content}
				<if test="csInfo.cs_file != null and csInfo.cs_file != ''">
					, cs_file = #{csInfo.cs_file}
				</if>
<!-- 				<if test="#{csInfo.file1} != ''">  -->
<!-- 					, cs_file = #{csInfo.cs_file} -->
<!-- 				</if> -->
    		 WHERE
    		 	cs_type IN(${condition})
    		 	AND cs_type_list_num = #{csInfo.cs_type_list_num}
	</update>
	
	<!-- CS-공지사항, 자주묻는 질문 게시글 삭제 -->
	<delete id="deleteCs">
		DELETE
			FROM CS
			WHERE
    		 	cs_type IN(${condition})
    		AND cs_type_list_num = #{cs_type_list_num}	
	</delete>
    
    <!-- CS-1:1 게시판 관리자 답변 달기 -->
    <update id="updateReply">
		UPDATE 
			CS
			SET cs_reply = #{qnaInfo.cs_reply}
				, cs_type = #{qnaInfo.cs_type}
    		 	WHERE 
    		 		cs_type IN(${condition})
    		 		AND cs_type_list_num = #{qnaInfo.cs_type_list_num}				
	</update>
	
	<!-- 통계 일일 회원 가입 수 -->
	<select id="getMemberJoinCount" resultType="int">
		SELECT 
			COUNT(*) AS joinLate
			FROM MEMBERS
				WHERE member_date = CURDATE() - INTERVAL #{dayCount} DAY
	</select>
	
	<!-- 일주일간 날짜 예매율 순 -->
	<select id="getMovieLateCount" resultType="int">
		SELECT COUNT(movie_num) AS movieLate
			FROM ORDER_MY_TICKET
			WHERE play_date BETWEEN CURDATE() - INTERVAL 7 DAY AND CURDATE()
			    AND play_change = '취소불가'
			GROUP BY movie_num
			ORDER BY movieLate DESC
			LIMIT #{dayCount}, 1;        
	</select>
	
	<!-- 일주일간 예매 수 영화며 조회 -->
	<select id="getMovieLateName" resultType="String">
		SELECT movie_name_kr, COUNT(movie_num) AS movieLate
			FROM ORDER_MY_TICKET
			WHERE play_date BETWEEN CURDATE() - INTERVAL 7 DAY AND CURDATE()
			    AND play_change = '취소불가'
			GROUP BY movie_num
			ORDER BY movieLate DESC
			LIMIT #{dayCount}, 1;        
	</select>

	<!-- 일일 예매 수 조회 -->
	<select id="getOrderLate" resultType="int">
		SELECT 
			COUNT(*)  AS orderLate
			FROM ORDER_MY_TICKET
				WHERE play_date = CURDATE() - INTERVAL #{dayCount} DAY
				AND play_change = '취소불가'
	</select>
	
	
	
</mapper>